// Generated by view binder compiler. Do not edit!
package com.example.progetto_java.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.progetto_java.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RigaVicinanzeBinding implements ViewBinding {
  @NonNull
  private final TableRow rootView;

  @NonNull
  public final ConstraintLayout frameLayout;

  @NonNull
  public final ImageView objectImage;

  @NonNull
  public final ImageView objectIsNear;

  @NonNull
  public final TextView objectLevel;

  @NonNull
  public final TextView objectName;

  @NonNull
  public final TableRow rigaClassifica;

  private RigaVicinanzeBinding(@NonNull TableRow rootView, @NonNull ConstraintLayout frameLayout,
      @NonNull ImageView objectImage, @NonNull ImageView objectIsNear,
      @NonNull TextView objectLevel, @NonNull TextView objectName,
      @NonNull TableRow rigaClassifica) {
    this.rootView = rootView;
    this.frameLayout = frameLayout;
    this.objectImage = objectImage;
    this.objectIsNear = objectIsNear;
    this.objectLevel = objectLevel;
    this.objectName = objectName;
    this.rigaClassifica = rigaClassifica;
  }

  @Override
  @NonNull
  public TableRow getRoot() {
    return rootView;
  }

  @NonNull
  public static RigaVicinanzeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RigaVicinanzeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.riga_vicinanze, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RigaVicinanzeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frameLayout;
      ConstraintLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.objectImage;
      ImageView objectImage = ViewBindings.findChildViewById(rootView, id);
      if (objectImage == null) {
        break missingId;
      }

      id = R.id.objectIsNear;
      ImageView objectIsNear = ViewBindings.findChildViewById(rootView, id);
      if (objectIsNear == null) {
        break missingId;
      }

      id = R.id.objectLevel;
      TextView objectLevel = ViewBindings.findChildViewById(rootView, id);
      if (objectLevel == null) {
        break missingId;
      }

      id = R.id.objectName;
      TextView objectName = ViewBindings.findChildViewById(rootView, id);
      if (objectName == null) {
        break missingId;
      }

      TableRow rigaClassifica = (TableRow) rootView;

      return new RigaVicinanzeBinding((TableRow) rootView, frameLayout, objectImage, objectIsNear,
          objectLevel, objectName, rigaClassifica);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
