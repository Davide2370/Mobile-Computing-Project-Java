// Generated by view binder compiler. Do not edit!
package com.example.progetto_java.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.progetto_java.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUtenteVicinanzeMarkerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout fragmentUtenteVicinanzeMarker;

  @NonNull
  public final Button indietroHome;

  @NonNull
  public final TextView lifeTextView;

  @NonNull
  public final TextView pHP;

  @NonNull
  public final TextView pName;

  @NonNull
  public final TextView pXP;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final ImageView utenteImage;

  private FragmentUtenteVicinanzeMarkerBinding(@NonNull FrameLayout rootView,
      @NonNull FrameLayout fragmentUtenteVicinanzeMarker, @NonNull Button indietroHome,
      @NonNull TextView lifeTextView, @NonNull TextView pHP, @NonNull TextView pName,
      @NonNull TextView pXP, @NonNull TextView textView2, @NonNull ImageView utenteImage) {
    this.rootView = rootView;
    this.fragmentUtenteVicinanzeMarker = fragmentUtenteVicinanzeMarker;
    this.indietroHome = indietroHome;
    this.lifeTextView = lifeTextView;
    this.pHP = pHP;
    this.pName = pName;
    this.pXP = pXP;
    this.textView2 = textView2;
    this.utenteImage = utenteImage;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUtenteVicinanzeMarkerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUtenteVicinanzeMarkerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_utente_vicinanze_marker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUtenteVicinanzeMarkerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      FrameLayout fragmentUtenteVicinanzeMarker = (FrameLayout) rootView;

      id = R.id.indietroHome;
      Button indietroHome = ViewBindings.findChildViewById(rootView, id);
      if (indietroHome == null) {
        break missingId;
      }

      id = R.id.life_textView;
      TextView lifeTextView = ViewBindings.findChildViewById(rootView, id);
      if (lifeTextView == null) {
        break missingId;
      }

      id = R.id.pHP;
      TextView pHP = ViewBindings.findChildViewById(rootView, id);
      if (pHP == null) {
        break missingId;
      }

      id = R.id.pName;
      TextView pName = ViewBindings.findChildViewById(rootView, id);
      if (pName == null) {
        break missingId;
      }

      id = R.id.pXP;
      TextView pXP = ViewBindings.findChildViewById(rootView, id);
      if (pXP == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.utenteImage;
      ImageView utenteImage = ViewBindings.findChildViewById(rootView, id);
      if (utenteImage == null) {
        break missingId;
      }

      return new FragmentUtenteVicinanzeMarkerBinding((FrameLayout) rootView,
          fragmentUtenteVicinanzeMarker, indietroHome, lifeTextView, pHP, pName, pXP, textView2,
          utenteImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
